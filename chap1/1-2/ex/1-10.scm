;; Ackermann関数
;; http://ja.wikipedia.org/wiki/%E3%82%A2%E3%83%83%E3%82%AB%E3%83%BC%E3%83%9E%E3%83%B3%E9%96%A2%E6%95%B0
;; 与える数が大きくなると計算量も爆発的に大きくなるという特徴がある。

(define (A x y)
  (cond [(= y 0) 0]
	[(= x 0) (* 2 y)]
	[(= y 1) 2]
	[else (A (- x 1)
		 (A x (- y 1)))]))

(A 1 10)
;; 1024

(A 2 4)
;; 65536

(A 3 3)
;; 65536

;; 以下の数学的定義は？
(define (f n) (A 0 n))
(define (g n) (A 1 n))
(define (h n) (A 2 n))

;; (f n)
;; => (A 0 n)
;; => (* 2 y)
;; => 2n
(f 2)
(f 6)

;; (g n)
;; => (A 1 n)
;; => (A 0 (A 1 n-1))
;; => (A 0 (A 0 (A 0 n-2)))
;; => (A 0 (A 0 ... (A 0 (A 1 1)))
;; => (A 0 (A 0 ... (* 2 2)
;; => 2^n
(g 2)
(g 3)
(g 4)

;; (h n)
;; => (A 2 n)
;; => (A 1 (A 2 n-1))
;; => (A 1 (A 1 (A 2 n-2)))
;; => (A 1 (A 1 ... (A 1 (A 2 1))))
;; => (A 1 (A 1 ... (A 1 2)))
;; => (A 1 (A 1 ... (A 0 (A 2 1))))
;; => (A 1 (A 1 ... (A 0 2)))
;; => (A 1 (A 1 ... (A 1 (* 2 2)
;; １つの(A 1 2)で(* 2 2)が1つできる。
(h 1)
(h 2)
(h 3)
(h 4)